<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.action.modules.kpi.dao.PerformStationDao">
	<sql id="Columns">
		a.id,
		a.perform_id as "performType.id",
		b.performTypeName as "performType.performTypeName",
		a.station_id as "workStationInfos.id",
		c.stationName as "workStationInfos.stationName",
		a.remarks,
		a.create_by AS "createBy.id",
		a.create_date as "createDate",
		a.update_by AS "updateBy.id",
		a.update_date as "updateDate",
		a.del_flag as "delFlag"
	</sql>
	
	<sql id="Joins">
		left join kpi_performtype b on b.id=a.perform_id
		left join bas_workstationinfos c on c.id=a.station_id
	</sql>
	
	<!-- 1.get使用ID查询PAD信息 -->
	<select id="get" resultType="PerformStation">
		select
			<include refid="Columns"/>
		from kpi_perform_station a
			<include refid="Joins"/>
		where a.id=#{id}
	</select>
	
	<!-- 2.根据条件查询 -->
	<select id="findList" resultType="PerformStation">
		select
			<include refid="Columns"/>
		from kpi_perform_station a
			<include refid="Joins"/>
		where a.del_flag=#{DEL_FLAG_NORMAL} 
		<if test="performType.performTypeName != null and performType.performTypeName != ''">
			and b.performTypeName like concat('%',#{performType.performTypeName},'%') 
		</if>
		order by a.update_date desc
	</select>
	
	<!-- 3.查询所有信息 -->
	<select id="findAllList" resultType="PerformStation">
		select
			<include refid="Columns"/>
		from kpi_perform_station a
			<include refid="Joins"/>
		where a.del_flag=#{DEL_FLAG_NORMAL} 
		order by a.update_date desc
	</select>
	
	<!-- 4.添加 -->
	<insert id="insert">
		insert into kpi_perform_station(
			id,
			perform_id,
			station_id,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		)values(
			#{id},
			#{performType.id},
			#{workStationInfos.id},
			#{createBy.id}, 
			#{createDate}, 
			#{updateBy.id}, 
			#{updateDate}, 
			#{remarks}, 
			#{delFlag}
		)
	</insert>
	
	<!-- 5.修改 -->
	<update id="update">
		update kpi_perform_station set
			perform_id=#{performType.id},
			station_id=#{workStationInfos.id},
			update_by=#{updateBy.id}, 
			update_date=#{updateDate}
		where id=#{id}
	</update>
	
	<!-- 6.删除 -->
	<delete id="delete">
		UPDATE kpi_perform_station SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</delete>
	
</mapper>